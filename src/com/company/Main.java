package com.company;

import com.company.animals.*;
import com.company.species.Carnivoren;
import com.company.species.Herbivoren;
import com.company.species.Omnivoren;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

/**
 * @author Raymond Chang
 * <p>
 * The purpose of this class is to make it possible to enter some animal names, give animals food or just say 'perform trick'.
 * When you enter those values into the console, a response will be generated by one of the animal classes.
 */
public class Main {
    public static void main(String[] args) {
        // write your code here
        String[] commands = new String[4];
        commands[0] = "hello";
        commands[1] = "give leaves";
        commands[2] = "give meat";
        commands[3] = "perform trick";

        List<Animal> animalList = new ArrayList<>();

        Lion henk = new Lion();
        henk.name = "henk";
        Hippo elsa = new Hippo();
        elsa.name = "elsa";
        Pig dora = new Pig();
        dora.name = "dora";
        Tiger wally = new Tiger();
        wally.name = "wally";
        Zebra marty = new Zebra();
        marty.name = "marty";
        Fish nemo = new Fish();
        nemo.name = "nemo";
        Cat mozzie = new Cat();
        mozzie.name = "mozzie";

        animalList.add(henk);
        animalList.add(elsa);
        animalList.add(dora);
        animalList.add(wally);
        animalList.add(marty);
        animalList.add(nemo);
        animalList.add(mozzie);


        Scanner scanner = new Scanner(System.in);

        //While is true forever. Only for test purposes.
        while (true) {
            System.out.print("Voer uw command in: ");
            String input = scanner.nextLine();

            animalSayHello(animalList, input);
            feedAnimalsOrDoTricks(input, animalList);
        }

    }

    /**
     * This method checks if you say hello or not. If you do say hello or eg hello henk, then a response will be
     * returned.
     *
     * @param animalList is a list of different kind of animals.
     * @param input      is an input from the user
     */
    public static void animalSayHello(List<Animal> animalList, String input) {

        String[] getName;
        String animalName;

        //check if input value contains 'hello'
        if (input.contains("hello")) {
            getName = input.split(" ");

            //Try to get the second word behind the word 'hello'. Eg 'hello wally' get second word
            //'wally'
            try {
                animalName = getName[1];

                for (Animal animal : animalList) {
                    if (animal.getName().equals(animalName)) {
                        animal.sayHello();
                    }
                }

            } catch (Exception e) {
                //An ArrayIndexOutOfBoundsException error will occur when there is no values behind
                //the word 'hello'. Then every animal needs to say 'hello'
                for (Animal animal : animalList) {
                    if (animal instanceof Herbivoren) {
                        animal.sayHello();
                    } else if (animal instanceof Carnivoren) {
                        animal.sayHello();
                    } else if (animal instanceof Omnivoren) {
                        animal.sayHello();
                    }
                }
            }
        }
    }

    /**
     * This method checks the input. In this case, you can only say 3 things. If you say give leaves or give meat, then
     * you are feeding the animals. If you say do tricks, then animals who can do a trick will perform a trick.
     * In the super class eg. in Omnivoren, you have an empty performTrick method. This will be overridden when
     * a animal has its own performTrick method.
     *
     * @param input      is an input from the user.
     * @param animalList is a list of different kind of animals.
     */
    public static void feedAnimalsOrDoTricks(String input, List<Animal> animalList) {
        switch (input) {
            case "give leaves":
                for (Animal animal : animalList) {
                    if (animal instanceof Herbivoren) {
                        ((Herbivoren) animal).eatLeaves();
                    } else if (animal instanceof Omnivoren) {
                        ((Omnivoren) animal).eatLeaves();
                    }
                }
                break;
            case "give meat":
                for (Animal animal : animalList) {
                    if (animal instanceof Carnivoren) {
                        ((Carnivoren) animal).eatMeat();
                    } else if (animal instanceof Omnivoren) {
                        ((Omnivoren) animal).eatMeat();
                    }
                }
                break;
            case "perform trick":
                for (Animal animal : animalList) {
                    if (animal instanceof Omnivoren) {
                        animal.performTrick();
                    } else if (animal instanceof Carnivoren) {
                        animal.performTrick();
                    } else if (animal instanceof Herbivoren) {
                        animal.performTrick();
                    }
                }
        }
    }
}
